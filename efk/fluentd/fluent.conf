<source>
  @type  forward
  @id    input1
  @label @mainstream
  port  24224
</source>

<label @mainstream>

  <match nginx.docker.**>
    @type rewrite_tag_filter
    capitalize_regex_backreference yes
    <rule>
      key     source
      pattern ^stderr$
      tag     stderr.${tag}
    </rule>
    <rule>
      key     source
      pattern ^stdout$
      tag     stdout.${tag}
    </rule>
  </match>


  <match stdout.nginx.docker.**>
    @type copy
    <store>
  	  @type parser
  	  @id   output_nginx_stdout
  	  key_name log
  	  format /^(?<remote>[^ ]*) (?<host>[^ ]*) - (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)" "(?<forwarded>[^\"]*)")?$/ 
  	  time_key time
	  time_format %FT%T%:z 
	  remove_prefix stdout.nginx
  	  reserve_data yes
    </store>
  </match>
  
  <match stderr.nginx.docker.**>
    @type copy
    <store>
  	  @type parser
  	  @id   output_nginx_stderr
	  key_name log
	  format /^(?<time>\d{4}\/\d{2}\/\d{2} \d{2}:\d{2}:\d{2}) \[(?<log_level>[^\]]+)\] (?<pid>\d+).(?<tid>[^:]+): (?<message>[^,]+)(?:, client: (?<host>[^,]+))?(?:, server: (?<server>[^,]+))?(?:, request: "(?<request>[^,]+)")?(?:, upstream: "(?<upstream>[^,]+)")?(?:, host: "(?<remote>[^,]+)")?(?:, referrer: "(?<referrer>[^,]+)")?.*$/
	  time_key time
	  time_format %Y/%m/%d %H:%M:%S 
	  remove_prefix stderr.nginx
  	  reserve_data yes
    </store>
  </match>
  
  <filter docker.**>
    @type concat
    @id   output_concat
    key log
    stream_identity_key container_id
    multiline_start_regexp /^-e:2:in `\/'/
    multiline_end_regexp /^-e:4:in/
  </filter>
  
  <match docker.**>
    @type elasticsearch
    @id   output_elastic
	host elastic1
	port 9200
	logstash_format true
	#user fluentd
	#password d2W4iV7W8dt9pYY9
  </match>
</label>
