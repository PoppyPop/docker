<system>
  workers 1
</system>

<source>
  @type  forward
  @id    input1
  port  24224
</source>

@include docker-log.conf

  <match nginx.docker.**>
    @type rewrite_tag_filter
    capitalize_regex_backreference yes
    <rule>
      key     stream
      pattern ^stderr$
      tag     stderr.${tag}
    </rule>
    <rule>
      key     stream
      pattern ^stdout$
      tag     stdout.${tag}
    </rule>
  </match>


  <filter stdout.nginx.docker.**>
    @type parser
    key_name log
    <parse>
	  @type regexp
      expression /^(?<remote>[^ ]*) (?<host>[^ ]*) - (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*) +\S*)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)" "(?<forwarded>[^\"]*)" (?<rtime>[^ ]*) (?<utime>[^ ]*) (?<upstream>[^ ]*))?$/ 
      time_key time
      time_format %FT%T%:z 
      types code:integer,size:integer,rtime:float,utime:float
	</parse>
	reserve_data yes
  </filter>
  
  <match stdout.nginx.docker.**>
    @type retag
    remove_prefix stdout.nginx
  </match>
  
  <filter stderr.nginx.docker.**>
    @type parser
    key_name log
	<parse>
	  @type regexp
      expression /^(?<time>\d{4}\/\d{2}\/\d{2} \d{2}:\d{2}:\d{2}) \[(?<log_level>[^\]]+)\] (?<pid>\d+).(?<tid>[^:]+): (?<message>[^,]+)(?:, client: (?<host>[^,]+))?(?:, server: (?<server>[^,]+))?(?:, request: "(?<request>[^,]+)")?(?:, upstream: "(?<upstream>[^,]+)")?(?:, host: "(?<remote>[^,]+)")?(?:, referrer: "(?<referrer>[^,]+)")?.*$/
      time_key time
      time_format %Y/%m/%d %H:%M:%S 
      types pid:integer, tid:integer
	</parse>
	reserve_data yes
  </filter>
  
  <match stderr.nginx.docker.**>
    @type retag
    remove_prefix stderr.nginx
  </match>
    
  # Multiligne for elastic
  <filter docker.**>
    @type concat
    key log
    stream_identity_key container_id
    multiline_start_regexp /^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3}
    multiline_end_regexp /^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3}
  </filter>
  
  # Remove empty log
  <filter docker.**>
    @type grep
    <exclude>
      key log
      pattern ^\n$
    </exclude>
  </filter>
  
  <filter docker.**>
    @type elasticsearch_genid
    hash_id_key _hash    # storing generated hash id key (default is _hash)
  </filter>
  
  #<match docker.**>
  #  @type stdout
  #</match>
  
  <match docker.**>
    @type elasticsearch
    @id   output_elastic
    host elastic1
    port 9200
    logstash_format true
    time_key time
    #user fluentd
    #password d2W4iV7W8dt9pYY9
    id_key _hash # specify same key name which is specified in hash_id_key
    remove_keys _hash # Elasticsearch doesn't like keys that start with _
    ssl_version TLSv1_2
  </match>
