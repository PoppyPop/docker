version: '3'
services:
  elastic1:
    #image: amazon/opendistro-for-elasticsearch:0.10.0
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
    labels:
      co.elastic.logs/module: elasticsearch 
    env_file:
      - env/elastic.env
    environment:
      - node.name=elastic1
      - discovery.seed_hosts=elastic2
      - cluster.initial_master_nodes=elastic1,elastic2
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - path.repo=/backup
      - "ES_JAVA_OPTS=-Xms3072m -Xmx3072m"
      - xpack.security.http.ssl.key=$CERTS_DIR/elastic1/elastic1.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/elastic1/elastic1.crt
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/elastic1/elastic1.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/elastic1/elastic1.key
      - xpack.security.audit.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elastic1-datas:/usr/share/elasticsearch/data
      - elastic-backup:/backup
      - es-certs:$CERTS_DIR
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
      - 9600:9600
    networks:
      efk-net:
        aliases:
          - elasticsearch
    healthcheck:
      test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "7"

  elastic2:
    #image: amazon/opendistro-for-elasticsearch:0.10.0
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.0
    labels:
      co.elastic.logs/module: elasticsearch
    env_file:
      - env/elastic.env
    environment:
      - node.name=elastic2
      - discovery.seed_hosts=elastic1
      - cluster.initial_master_nodes=elastic1,elastic2
      - bootstrap.memory_lock=true
      - path.repo=/backup
      - "ES_JAVA_OPTS=-Xms3072m -Xmx3072m"
      - xpack.security.http.ssl.key=$CERTS_DIR/elastic2/elastic2.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/elastic2/elastic2.crt
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/elastic2/elastic2.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/elastic2/elastic2.key
      - xpack.security.audit.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    networks:
      - efk-net
    volumes:
      - elastic2-datas:/usr/share/elasticsearch/data
      - elastic-backup:/backup
      - es-certs:$CERTS_DIR
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    healthcheck:
      test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "7"

  fluentd:
    image: poppypop/docker-fluentd
    container_name: docker-fluentd
    ports:
      - 24224:24224
    volumes:
      - fluentd-conf:/fluentd/etc/:ro
      - /var/lib/docker/containers/:/docker/containers/:ro
      - fluentd-logpos:/fluentd/logpos/
      - es-certs:$CERTS_DIR
    environment:
    #  - FLUENTD_CONF=fluentd.conf
      - FLUENT_UID=0
    networks:
      - efk-net
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "7"
        
  fluentd-gen:
    image: jwilder/docker-gen
    command: -notify-sighup docker-fluentd -interval 300 -watch /fluentd/etc/docker-log.tmpl /fluentd/etc/docker-log.conf
    volumes:
      - fluentd-conf:/fluentd/etc/
      - /var/run/docker.sock:/tmp/docker.sock:ro
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "7"
        
  kibana:
    #image: amazon/opendistro-for-elasticsearch-kibana:0.10.0
    image: docker.elastic.co/kibana/kibana:7.3.0
    labels:
      co.elastic.logs/module: kibana
      co.elastic.logs/fileset: log
    environment:
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana
      - ELASTICSEARCH_PASSWORD=wvx89D8ZJuo13QccxC7i
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=$CERTS_DIR/ca/ca.crt
      - ELASTICSEARCH_SSL_VERIFICATIONMODE=certificate
      - VIRTUAL_HOST=kibana.mo-ot.fr
      - VIRTUAL_PORT=5601
      - PUBLISH_DNS=1
      - PUBLISH_DNS_TXT=1
    depends_on:
      - elastic1
      - elastic2
    networks:
      - proxy-net
      - efk-net
    volumes:
      - es-certs:$CERTS_DIR
    expose:
      - 5601
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "7"
        
  filebeat:
    #image: amazon/opendistro-for-elasticsearch-kibana:0.10.0
    image: docker.elastic.co/beats/filebeat:7.3.0
    depends_on:
      - elastic1
      - elastic2
    networks:
      - efk-net
    volumes:
      - es-certs:/certs
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro
    command: 'filebeat -e -strict.perms=false -E output.elasticsearch.hosts=["elastic1:9200"] -E output.elasticsearch.protocol=https -E output.elasticsearch.username="Filebeat" -E output.elasticsearch.password="Pk7r2TP5p7owA3" -E output.elasticsearch.ssl.certificate_authorities=["/certs/ca/ca.crt"]'
    user: root
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "7"
        
networks:
  proxy-net:
    external: true
  efk-net:
    external: true

volumes:
  elastic1-datas:
    external: true
  elastic2-datas:
    external: true
  elastic-backup:
    external: true
  fluentd-conf:
    external: true
  es-certs:
    external: true
  fluentd-logpos:
    